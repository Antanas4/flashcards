// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250416114915_AddStudySession")]
    partial class AddStudySession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("shared.Models.Flashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FlashcardsCollectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FlashcardsCollectionId");

                    b.ToTable("Flashcards");
                });

            modelBuilder.Entity("shared.Models.FlashcardsCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FlashcardsCollection");
                });

            modelBuilder.Entity("shared.Models.StudySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StudySessions");
                });

            modelBuilder.Entity("shared.Models.StudySessionFlashcard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorrectStreak")
                        .HasColumnType("integer");

                    b.Property<int>("FlashcardId")
                        .HasColumnType("integer");

                    b.Property<int>("FlashcardsCollectionId")
                        .HasColumnType("integer");

                    b.Property<bool>("LastAnswerCorrect")
                        .HasColumnType("boolean");

                    b.Property<int?>("StudySessionId")
                        .HasColumnType("integer");

                    b.Property<int>("TimesSeen")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlashcardId");

                    b.HasIndex("FlashcardsCollectionId");

                    b.HasIndex("StudySessionId");

                    b.ToTable("StudySessionFlashcards");
                });

            modelBuilder.Entity("shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("shared.Models.Flashcard", b =>
                {
                    b.HasOne("shared.Models.FlashcardsCollection", "FlashcardsCollection")
                        .WithMany("Flashcards")
                        .HasForeignKey("FlashcardsCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlashcardsCollection");
                });

            modelBuilder.Entity("shared.Models.FlashcardsCollection", b =>
                {
                    b.HasOne("shared.Models.User", "User")
                        .WithMany("FlashcardsCollection")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("shared.Models.StudySessionFlashcard", b =>
                {
                    b.HasOne("shared.Models.Flashcard", "Flashcard")
                        .WithMany()
                        .HasForeignKey("FlashcardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shared.Models.FlashcardsCollection", "FlashcardsCollection")
                        .WithMany()
                        .HasForeignKey("FlashcardsCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shared.Models.StudySession", null)
                        .WithMany("Flashcards")
                        .HasForeignKey("StudySessionId");

                    b.Navigation("Flashcard");

                    b.Navigation("FlashcardsCollection");
                });

            modelBuilder.Entity("shared.Models.FlashcardsCollection", b =>
                {
                    b.Navigation("Flashcards");
                });

            modelBuilder.Entity("shared.Models.StudySession", b =>
                {
                    b.Navigation("Flashcards");
                });

            modelBuilder.Entity("shared.Models.User", b =>
                {
                    b.Navigation("FlashcardsCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
